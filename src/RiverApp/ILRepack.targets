<Project>
	<Target Name="ILRepack2" AfterTargets="Build" >
		<!--
		Condition="'$(Configuration)' == 'Release'"
		-->
		<Message Text="ILRepack2" Importance="High" />
		<ItemGroup>
			<InputAssemblies Include="$(OutDir)River.*.dll" />
			<InputAssemblies Remove="$(OutDir)RiverApp.exe" />
			<InputAssemblies Remove="$(OutDir)River.exe" />
		</ItemGroup>
		<ItemGroup>
			<DoNotInternalizeAssembliesFiles Include="$(OutDir)River.*.dll" />
		</ItemGroup>
		<!--
		<ItemGroup>
			<DoNotInternalizeAssemblies Include="@(DoNotInternalizeAssembliesFiles->'%(FileName)')" />
			<DoNotInternalizeAssemblies Remove="River.Internal" />
		</ItemGroup>
		-->
		
		<Message Importance="high" Text="OutDir = $(OutDir)" />
		<Message Importance="high" Text="MSBuildThisFileDirectory = $(MSBuildThisFileDirectory)" />
		<Message Importance="high" Text="Configuration = $(Configuration)" />
		<Message Importance="high" Text="TargetFramework = $(TargetFramework)" />
		<Message Importance="high" Text="InputAssemblies = @(InputAssemblies, ' ')" />
		<Message Importance="high" Text="DoNotInternalizeAssemblies = @(DoNotInternalizeAssemblies, ' ')" />

		<Message Text="MERGING: @(InputAssemblies->'%(Filename)') into $(OutputAssembly)" Importance="High" />
		<!--
			Internalize="true"
			InternalizeExclude="@(DoNotInternalizeAssemblies)"
		-->
		<ILRepack
			Parallel="true"
			InputAssemblies="@(InputAssemblies)"
			TargetKind="SameAsPrimaryAssembly"
			OutputFile="$(OutDir)River.exe"
		/>

		<Copy SourceFiles="$(OutDir)\RiverApp.exe.config" DestinationFiles="$(OutDir)\River.exe.config" />

	</Target>

	<Target Name="CleanReferenceCopyLocalPaths2" AfterTargets="Build" DependsOnTargets="ILRepack2">
		<Message Text="CleanReferenceCopyLocalPaths2" Importance="High" />
		<Delete Files="@(ReferenceCopyLocalPaths->'$(OutDir)%(DestinationSubDirectory)%(Filename)%(Extension)')" />
		<ItemGroup>
			<Directories Include="$([System.IO.Directory]::GetDirectories('$(OutDir)%(DestinationSubDirectory)', '*', System.IO.SearchOption.AllDirectories))" />
			<Directories>
				<Files>$([System.IO.Directory]::GetFiles("%(Directories.Identity)", "*", System.IO.SearchOption.AllDirectories).get_Length())</Files>
			</Directories>
		</ItemGroup>
		<RemoveDir Directories="@(Directories)" Condition="%(Files)=='0'" />
	</Target>

<!--
	<Target Name="NugetPack" AfterTargets="Build" DependsOnTargets="ILRepack2" Condition="'$(Configuration)'=='Release'">
		<Message Text="NugetPack" Importance="High" />
		<Exec Command="cd nuget &amp; nuget pack ..\ -Properties Configuration=Release" />
	</Target>
-->
</Project>